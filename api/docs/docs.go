// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/blueprints": {
            "get": {
                "description": "get blueprints",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Blueprints"
                ],
                "summary": "get blueprints",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internel Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "post blueprints",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Blueprints"
                ],
                "summary": "post blueprints",
                "parameters": [
                    {
                        "description": "json",
                        "name": "blueprint",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Blueprint"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internel Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/blueprints/{blueprintId}": {
            "get": {
                "description": "get blueprints",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Blueprints"
                ],
                "summary": "get blueprints",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "blueprint id",
                        "name": "blueprintId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Blueprint"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internel Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete BluePrints",
                "tags": [
                    "Blueprints"
                ],
                "summary": "delete blueprints",
                "parameters": [
                    {
                        "type": "string",
                        "description": "blueprintId",
                        "name": "blueprintId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internel Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "patch blueprints",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Blueprints"
                ],
                "summary": "patch blueprints",
                "parameters": [
                    {
                        "type": "string",
                        "description": "blueprintId",
                        "name": "blueprintId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Blueprint"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internel Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/blueprints/{blueprintId}/trigger": {
            "post": {
                "description": "trigger a blueprint immediately",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Blueprints"
                ],
                "summary": "trigger blueprint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "blueprintId",
                        "name": "blueprintId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Pipeline"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internel Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/domainlayer/repos": {
            "get": {
                "description": "Get all repos from database",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Domainlayer"
                ],
                "summary": "Get all repos from database",
                "responses": {
                    "200": {
                        "description": "{\"repos\": repos, \"count\": count}",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internel Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "check http status",
                "tags": [
                    "Ping"
                ],
                "summary": "Ping",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internel Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/pipelines": {
            "get": {
                "description": "GET /pipelines?status=TASK_RUNNING\u0026pending=1\u0026page=1\u0026pagesize=10\nRETURN SAMPLE\n{\n\"pipelines\": [\n{\"id\": 1, \"name\": \"test-pipeline\", ...}\n],\n\"count\": 5\n}",
                "tags": [
                    "pipelines"
                ],
                "summary": "Get list of pipelines",
                "parameters": [
                    {
                        "type": "string",
                        "description": "query",
                        "name": "status",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query",
                        "name": "pending",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query",
                        "name": "pagesize",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Pipeline"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internel Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create and run a new pipeline\nRETURN SAMPLE\n{\n\"name\": \"name-of-pipeline\",\n\"tasks\": [\n[ {\"plugin\": \"gitlab\", ...}, {\"plugin\": \"jira\"} ],\n[ {\"plugin\": \"github\", ...}],\n]\n}",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "pipelines"
                ],
                "summary": "Create and run a new pipeline",
                "parameters": [
                    {
                        "description": "json",
                        "name": "pipeline",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NewPipeline"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Pipeline"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/pipelines/{pipelineId}": {
            "get": {
                "description": "GET /pipelines/:pipelineId\nRETURN SAMPLE\n{\n\"id\": 1,\n\"name\": \"test-pipeline\",\n...\n}",
                "tags": [
                    "pipelines"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "query",
                        "name": "pipelineId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Pipeline"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internel Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Cancel a pending pipeline",
                "tags": [
                    "pipelines"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "pipeline ID",
                        "name": "pipelineId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internel Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/pipelines/{pipelineId}/tasks": {
            "get": {
                "description": "get task\nSAMPLE\n{\n\"tasks\": [\n{\"id\": 1, \"plugin\": \"\", ...}\n],\n\"count\": 5\n}",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Get task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "pipelineId",
                        "name": "pipelineId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"tasks\": tasks, \"count\": count}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internel Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/plugins/ae/connections": {
            "get": {
                "description": "Get all AE connections",
                "tags": [
                    "plugins/AE"
                ],
                "summary": "get all ae connections",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internel Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create AE connection",
                "tags": [
                    "plugins/AE"
                ],
                "summary": "create ae connection",
                "parameters": [
                    {
                        "description": "json body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AeConnection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internel Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/plugins/ae/connections/{connectionId}": {
            "get": {
                "description": "Get AE connection detail",
                "tags": [
                    "plugins/AE"
                ],
                "summary": "get ae connection detail",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internel Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a AE connection",
                "tags": [
                    "plugins/AE"
                ],
                "summary": "delete a ae connection",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internel Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Patch AE connection",
                "tags": [
                    "plugins/AE"
                ],
                "summary": "patch ae connection",
                "parameters": [
                    {
                        "description": "json body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AeConnection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internel Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/plugins/ae/test": {
            "post": {
                "description": "Test AE Connection",
                "tags": [
                    "plugins/AE"
                ],
                "summary": "test ae connection",
                "parameters": [
                    {
                        "description": "json body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TestConnectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internel Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/plugins/org/teams.csv": {
            "get": {
                "description": "get teams.csv file",
                "produces": [
                    "text/csv"
                ],
                "tags": [
                    "plugins/org"
                ],
                "summary": "Get teams.csv file",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "return fake data or not",
                        "name": "fake_data",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/shared.ApiBody"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/shared.ApiBody"
                        }
                    }
                }
            },
            "put": {
                "description": "upload teams.csv file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plugins/org"
                ],
                "summary": "Upload teams.csv file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "select file to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/shared.ApiBody"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/shared.ApiBody"
                        }
                    }
                }
            }
        },
        "/plugins/org/user_account_mapping.csv": {
            "get": {
                "description": "get user_account_mapping.csv.csv file",
                "produces": [
                    "text/csv"
                ],
                "tags": [
                    "plugins/org"
                ],
                "summary": "Get user_account_mapping.csv.csv file",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/shared.ApiBody"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/shared.ApiBody"
                        }
                    }
                }
            },
            "put": {
                "description": "upload user_account_mapping.csv.csv file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plugins/org"
                ],
                "summary": "Upload user_account_mapping.csv.csv file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "select file to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/shared.ApiBody"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/shared.ApiBody"
                        }
                    }
                }
            }
        },
        "/plugins/org/users.csv": {
            "get": {
                "description": "get users.csv file",
                "produces": [
                    "text/csv"
                ],
                "tags": [
                    "plugins/org"
                ],
                "summary": "Get users.csv file",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "return fake data or not",
                        "name": "fake_data",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/shared.ApiBody"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/shared.ApiBody"
                        }
                    }
                }
            },
            "put": {
                "description": "upload users.csv file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plugins/org"
                ],
                "summary": "Upload users.csv file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "select file to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/shared.ApiBody"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/shared.ApiBody"
                        }
                    }
                }
            }
        },
        "/push/{tableName}": {
            "post": {
                "description": "POST /push/:tableName",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "push"
                ],
                "summary": "POST /push/:tableName",
                "parameters": [
                    {
                        "type": "string",
                        "description": "table name",
                        "name": "tableName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"rowsAffected\": rowsAffected}",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internel Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/version": {
            "get": {
                "description": "return a object",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "version"
                ],
                "summary": "Get the version of lake",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internel Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "core.PipelineTask": {
            "type": "object",
            "required": [
                "plugin"
            ],
            "properties": {
                "options": {
                    "type": "object",
                    "additionalProperties": true
                },
                "plugin": {
                    "description": "Plugin name",
                    "type": "string"
                },
                "subtasks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "gin.H": {
            "type": "object",
            "additionalProperties": true
        },
        "models.AeConnection": {
            "type": "object",
            "required": [
                "app_id",
                "endpoint",
                "name",
                "secret_key"
            ],
            "properties": {
                "app_id": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "proxy": {
                    "type": "string"
                },
                "rateLimit": {
                    "type": "integer"
                },
                "secret_key": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Blueprint": {
            "type": "object",
            "required": [
                "mode",
                "name"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "cronConfig": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "isManual": {
                    "type": "boolean"
                },
                "mode": {
                    "type": "string",
                    "enum": [
                        "NORMAL",
                        "ADVANCED"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "plan": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "settings": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.NewPipeline": {
            "type": "object",
            "properties": {
                "blueprintId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "plan": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/core.PipelineTask"
                        }
                    }
                }
            }
        },
        "models.Pipeline": {
            "type": "object",
            "properties": {
                "beganAt": {
                    "type": "string"
                },
                "blueprintId": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "finishedAt": {
                    "type": "string"
                },
                "finishedTasks": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "plan": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "spentSeconds": {
                    "type": "integer"
                },
                "stage": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "totalTasks": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.TestConnectionRequest": {
            "type": "object",
            "required": [
                "app_id",
                "secret_key"
            ],
            "properties": {
                "app_id": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                },
                "proxy": {
                    "type": "string"
                },
                "secret_key": {
                    "type": "string"
                }
            }
        },
        "shared.ApiBody": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
